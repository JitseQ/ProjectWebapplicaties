// <auto-generated />
using System;
using FestivalApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FestivalApplication.Migrations
{
    [DbContext(typeof(FestivalContext))]
    partial class FestivalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FestivalApplication.Models.Artiest", b =>
                {
                    b.Property<int>("ArtiestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtiestDatumId")
                        .HasColumnType("int");

                    b.Property<int?>("ArtiestGenreId")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Spotify")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtiestId");

                    b.HasIndex("ArtiestDatumId");

                    b.HasIndex("ArtiestGenreId");

                    b.HasIndex("ProductId");

                    b.ToTable("Artiest");
                });

            modelBuilder.Entity("FestivalApplication.Models.ArtiestDatum", b =>
                {
                    b.Property<int>("ArtiestDatumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Beginuur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Einduur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtiestDatumId");

                    b.ToTable("ArtiestDatum");
                });

            modelBuilder.Entity("FestivalApplication.Models.ArtiestGenre", b =>
                {
                    b.Property<int>("ArtiestGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ArtiestGenreId");

                    b.ToTable("ArtiestGenre");
                });

            modelBuilder.Entity("FestivalApplication.Models.Factuur", b =>
                {
                    b.Property<int>("FactuurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactuurProductId")
                        .HasColumnType("int");

                    b.HasKey("FactuurId");

                    b.HasIndex("FactuurProductId");

                    b.ToTable("Factuur");
                });

            modelBuilder.Entity("FestivalApplication.Models.FactuurProduct", b =>
                {
                    b.Property<int>("FactuurProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Aantal")
                        .HasColumnType("int");

                    b.HasKey("FactuurProductId");

                    b.ToTable("FactuurProduct");
                });

            modelBuilder.Entity("FestivalApplication.Models.Gebruiker", b =>
                {
                    b.Property<int>("GebruikerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dorp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactuurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gebruikersnaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Huisnummer")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Postcode")
                        .HasColumnType("int");

                    b.Property<int>("Telefoonnummer")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GebruikerId");

                    b.HasIndex("FactuurId");

                    b.ToTable("Gebruiker");
                });

            modelBuilder.Entity("FestivalApplication.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtiestGenreId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.HasIndex("ArtiestGenreId");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("FestivalApplication.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactuurProductId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prijs")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("FactuurProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("FestivalApplication.Models.Stage", b =>
                {
                    b.Property<int>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtiestDatumId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StageId");

                    b.HasIndex("ArtiestDatumId");

                    b.ToTable("Stage");
                });

            modelBuilder.Entity("FestivalApplication.Models.Artiest", b =>
                {
                    b.HasOne("FestivalApplication.Models.ArtiestDatum", null)
                        .WithMany("ArtiestId")
                        .HasForeignKey("ArtiestDatumId");

                    b.HasOne("FestivalApplication.Models.ArtiestGenre", null)
                        .WithMany("ArtiestId")
                        .HasForeignKey("ArtiestGenreId");

                    b.HasOne("FestivalApplication.Models.Product", null)
                        .WithMany("ArtiestId")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("FestivalApplication.Models.Factuur", b =>
                {
                    b.HasOne("FestivalApplication.Models.FactuurProduct", null)
                        .WithMany("FactuurId")
                        .HasForeignKey("FactuurProductId");
                });

            modelBuilder.Entity("FestivalApplication.Models.Gebruiker", b =>
                {
                    b.HasOne("FestivalApplication.Models.Factuur", null)
                        .WithMany("GebruikerId")
                        .HasForeignKey("FactuurId");
                });

            modelBuilder.Entity("FestivalApplication.Models.Genre", b =>
                {
                    b.HasOne("FestivalApplication.Models.ArtiestGenre", null)
                        .WithMany("GenreId")
                        .HasForeignKey("ArtiestGenreId");
                });

            modelBuilder.Entity("FestivalApplication.Models.Product", b =>
                {
                    b.HasOne("FestivalApplication.Models.FactuurProduct", null)
                        .WithMany("ProductId")
                        .HasForeignKey("FactuurProductId");
                });

            modelBuilder.Entity("FestivalApplication.Models.Stage", b =>
                {
                    b.HasOne("FestivalApplication.Models.ArtiestDatum", null)
                        .WithMany("StageId")
                        .HasForeignKey("ArtiestDatumId");
                });
#pragma warning restore 612, 618
        }
    }
}
